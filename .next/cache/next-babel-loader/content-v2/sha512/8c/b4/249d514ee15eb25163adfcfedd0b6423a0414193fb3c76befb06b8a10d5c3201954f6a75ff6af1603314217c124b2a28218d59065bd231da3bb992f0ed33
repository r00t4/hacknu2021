{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sprsqds/HackNU2021/twitch-clone/src/components/Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\nconst Cont = styled.button`\n  color: #fff;\n  font-weight: bold;\n  padding: 0.5rem;\n  margin: 0 0.5rem;\n  border-radius: 4px;\n  display: grid;\n  place-content: center;\n  font-size: 13px;\n\n  ${props => props.buttonType === 'primary' ? css([\"background-color:var(--primary);:hover{background-color:\", \";}\"], darken(0.1, 'rgb(145, 71, 255)')) : css([\"background-color:#3a3a3d;:hover{background-color:\", \";}\"], lighten(0.1, '#3a3a3d'))};\n`;\n\nconst Button = (_ref) => {\n  let {\n    children,\n    buttonType\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"buttonType\"]);\n\n  return /*#__PURE__*/_jsxDEV(Cont, _objectSpread(_objectSpread({\n    buttonType: buttonType\n  }, rest), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Button;","map":{"version":3,"sources":["/home/sprsqds/HackNU2021/twitch-clone/src/components/Button.tsx"],"names":["styled","css","darken","lighten","Cont","button","props","buttonType","Button","children","rest"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;AAMA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,MAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKC,KAAD,IACAA,KAAK,CAACC,UAAN,KAAqB,SAArB,GACIN,GADJ,qEAK4BC,MAAM,CAAC,GAAD,EAAM,mBAAN,CALlC,IAQID,GARJ,8DAW4BE,OAAO,CAAC,GAAD,EAAM,SAAN,CAXnC,CAaM;AACV,CAzBA;;AAiCA,MAAMK,MAA6B,GAAG,UAI3B;AAAA,MAJ4B;AACrCC,IAAAA,QADqC;AAErCF,IAAAA;AAFqC,GAI5B;AAAA,MADNG,IACM;;AACT,sBACE,QAAC,IAAD;AAAM,IAAA,UAAU,EAAEH;AAAlB,KAAkCG,IAAlC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYA,eAAeD,MAAf","sourcesContent":["import styled, { css } from 'styled-components';\nimport { darken, lighten } from 'polished';\n\ninterface ButtonProps {\n  buttonType: 'primary' | 'secondary';\n}\n\nconst Cont = styled.button<ButtonProps>`\n  color: #fff;\n  font-weight: bold;\n  padding: 0.5rem;\n  margin: 0 0.5rem;\n  border-radius: 4px;\n  display: grid;\n  place-content: center;\n  font-size: 13px;\n\n  ${(props) =>\n    props.buttonType === 'primary'\n      ? css`\n          background-color: var(--primary);\n\n          :hover {\n            background-color: ${darken(0.1, 'rgb(145, 71, 255)')};\n          }\n        `\n      : css`\n          background-color: #3a3a3d;\n          :hover {\n            background-color: ${lighten(0.1, '#3a3a3d')};\n          }\n        `};\n`;\n\n\n\ninterface ButtonProps {\n  buttonType: 'primary' | 'secondary';\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  buttonType,\n  ...rest\n}: any) => {\n  return (\n    <Cont buttonType={buttonType} {...rest}>\n      {children}\n    </Cont>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}